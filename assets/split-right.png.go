package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// split_right_png returns raw, uncompressed file data.
func split_right_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0xaa,
0x01,0x55,0xfe,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x01,0x4c,0x49,0x44,0x41,0x54,0x78,0xda,0xec,
0x56,0x31,0x6a,0x84,0x40,0x14,0xfd,0x33,0x0a,0x22,0x89,0xdb,
0x6c,0xc0,0x26,0x6d,0x5a,0xfb,0x14,0x1e,0x20,0x7d,0x8e,0x60,
0x69,0xed,0x21,0x3c,0x83,0x17,0x10,0x42,0x2e,0x61,0x91,0x26,
0x69,0x3c,0x43,0x58,0x88,0xc1,0x42,0xcd,0x12,0x05,0x8d,0xf9,
0x5f,0x26,0x22,0x61,0xe3,0xea,0xa2,0x4b,0x8a,0x79,0xf0,0x1c,
0x70,0xc6,0xf7,0x7c,0x7f,0x7e,0xf1,0x59,0xdb,0xb6,0x70,0x2e,
0x70,0xb1,0xde,0x21,0x77,0xc8,0x76,0x05,0xee,0x84,0x3e,0x30,
0xa4,0xda,0x34,0xcd,0xab,0xef,0xfb,0xa6,0xa6,0x69,0x60,0x18,
0x06,0x30,0xc6,0x46,0xff,0xd0,0x71,0x1c,0x08,0x82,0x60,0xf4,
0x0c,0x55,0xac,0x28,0x0a,0xa8,0xaa,0x0a,0x3c,0xcf,0x7b,0x53,
0x14,0xe5,0x5a,0xc5,0xf7,0x1b,0xce,0x79,0x67,0x64,0xdb,0x36,
0xd0,0x7a,0x0c,0x71,0x1c,0x77,0xab,0x69,0x9a,0xa3,0xe7,0xea,
0xba,0x86,0x30,0x0c,0x81,0xf4,0x3b,0x1f,0x7c,0x6c,0x69,0x83,
0x12,0x4d,0x31,0x22,0x58,0x96,0x35,0xe9,0x9c,0xaa,0xaa,0x9d,
0xae,0xc0,0x96,0xcc,0xf4,0xae,0x9e,0x47,0x4a,0x77,0x28,0xd9,
0x14,0x0c,0x74,0x75,0x3e,0x68,0x92,0xc9,0x98,0x9a,0xec,0x77,
0x33,0xf2,0x53,0xbe,0x9a,0x93,0xec,0x50,0xeb,0x9f,0x23,0x19,
0xc8,0x64,0x32,0x99,0x4c,0x26,0x93,0xc9,0x64,0xff,0x25,0xd9,
0x9c,0x29,0x6b,0x4e,0xb2,0xa1,0x6e,0x6f,0xf6,0x33,0x9c,0x2c,
0x95,0x8c,0x4c,0x68,0x06,0x21,0xdd,0x7e,0x4c,0xa0,0x47,0x96,
0x65,0xfb,0xb2,0x2c,0x2f,0xa2,0x28,0x5a,0x7c,0xba,0x42,0x5d,
0xc8,0xf3,0x7c,0xdf,0x57,0xc5,0x75,0xdd,0xc7,0x34,0x4d,0xab,
0x76,0x05,0x24,0x49,0x52,0x92,0x3e,0xf9,0x50,0x84,0x1b,0xe4,
0x3d,0xf2,0x16,0x79,0x29,0x66,0xc9,0xa5,0x40,0x17,0xf6,0x81,
0x7c,0x42,0x3e,0x50,0x19,0x53,0xe4,0xb3,0xd8,0xbc,0x3a,0xb5,
0x43,0xff,0xc0,0x17,0xf2,0x1d,0xf9,0x42,0x3e,0x4c,0xdc,0xdb,
0x46,0xcc,0x8f,0xfa,0x0a,0x66,0x9f,0x22,0x50,0xfe,0x2d,0xc0,
0x00,0x2b,0x96,0xf0,0x53,0x73,0x7b,0xba,0x7b,0x00,0x00,0x00,
0x00,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,0x01,0x00,0x00,
0xff,0xff,0x33,0x79,0x4e,0x55,0xaa,0x01,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}