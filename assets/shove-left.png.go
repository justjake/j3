package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// shove_left_png returns raw, uncompressed file data.
func shove_left_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0x88,
0x02,0x77,0xfd,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x02,0x2a,0x49,0x44,0x41,0x54,0x78,0xda,0xdc,
0x56,0x4d,0x6b,0x1a,0x51,0x14,0x9d,0x99,0x4c,0x22,0xd3,0xa9,
0x21,0x61,0x12,0x5a,0x70,0x1d,0x5a,0xa8,0xb4,0x5d,0x64,0x53,
0xe2,0xce,0x55,0xc0,0x8d,0x90,0xe0,0x7f,0x10,0xd7,0xfd,0x07,
0xdd,0xb8,0xf5,0x17,0x64,0x91,0x85,0xd8,0x16,0x84,0x10,0x0c,
0x85,0x76,0xe1,0x36,0x04,0xa1,0x31,0xe4,0x63,0x50,0x90,0x10,
0xab,0x45,0xea,0x57,0x9b,0x19,0x3f,0xe6,0xf5,0x5c,0x3b,0x05,
0x89,0x09,0xce,0x2b,0x4f,0x17,0xbd,0x70,0x98,0xeb,0xcc,0xf8,
0xce,0xdc,0xfb,0xce,0xbd,0xef,0xca,0x8c,0x31,0x69,0x5e,0xa6,
0xc8,0xb2,0x4c,0xd7,0x6d,0xe0,0x06,0x60,0x9c,0xe0,0x32,0x62,
0x52,0x87,0xc3,0xe1,0x75,0x32,0x99,0x7c,0xe2,0xf3,0xf9,0x24,
0xbf,0xdf,0x2f,0xb9,0x1f,0xf0,0xa0,0x15,0x0a,0x05,0x29,0x95,
0x4a,0xd1,0x7b,0x7e,0x64,0xa6,0xeb,0x95,0x4c,0x05,0x96,0x15,
0x45,0x19,0x11,0xc5,0x62,0x31,0x49,0x55,0x55,0x9e,0x8f,0x7d,
0x0a,0x98,0x9e,0xd3,0x08,0x18,0xe4,0x50,0x44,0x9c,0x44,0x64,
0x8f,0xb9,0xf6,0x0c,0xd0,0x46,0xf9,0x9c,0x92,0x3a,0x21,0x02,
0x71,0x31,0x1f,0x35,0x4a,0x73,0xb4,0xff,0x82,0x6c,0x9d,0x2a,
0x04,0x78,0x3b,0x53,0xb2,0x4e,0xa7,0x63,0x38,0x8e,0xf3,0x05,
0xee,0x2b,0xd4,0x6f,0x02,0xc2,0x5b,0x9c,0x09,0x59,0xb3,0xd9,
0x5c,0xd1,0x34,0x2d,0x87,0xba,0x7d,0x61,0x59,0x56,0x27,0x1e,
0x8f,0xbf,0xc3,0xed,0xd5,0xf1,0xa2,0x16,0x62,0xb5,0x5a,0x4d,
0x37,0x0c,0xe3,0x00,0xb5,0xba,0x69,0xdb,0xb6,0x15,0x8d,0x46,
0x73,0x30,0x07,0x8f,0x96,0x84,0x92,0x21,0x55,0x72,0xbf,0xdf,
0xff,0x00,0xa2,0xad,0x1e,0x0c,0x9d,0xe8,0x13,0x88,0x2e,0xf0,
0xe8,0x0a,0x68,0x8b,0x4e,0xa3,0xd6,0x6e,0xb7,0x1f,0x91,0x03,
0x52,0x86,0x3d,0xab,0xc3,0xcd,0x03,0x5f,0x81,0xae,0x68,0xb2,
0x95,0x60,0x30,0xb8,0x5f,0x2c,0x16,0xeb,0xba,0xae,0xfb,0x32,
0x99,0xcc,0x6e,0x36,0x9b,0xb5,0x70,0xff,0x07,0x1a,0xb5,0x23,
0x9a,0x8c,0x55,0xab,0xd5,0x5e,0x38,0x1c,0xfe,0x6c,0x9a,0xe6,
0x77,0x34,0xf5,0xe5,0x48,0x24,0xf2,0x1e,0xca,0x7c,0x36,0x0b,
0xe9,0xb7,0xa8,0xae,0x20,0x92,0x63,0x10,0x1e,0x81,0xb8,0x0e,
0x45,0xae,0x43,0x99,0x87,0xf2,0x58,0xd3,0x15,0xa5,0xc6,0x5b,
0xe0,0x92,0xd6,0xab,0x54,0x2a,0x0b,0xa1,0x50,0x48,0xc9,0xe7,
0xf3,0xe1,0x72,0xb9,0x7c,0x44,0x07,0xca,0x5f,0x91,0x08,0x21,
0xc3,0xbe,0x30,0x04,0xf0,0x0b,0xee,0x39,0x65,0xab,0x54,0x2a,
0x2d,0x04,0x02,0x01,0x8a,0xf6,0x84,0xce,0x4b,0xa1,0x64,0x63,
0x84,0xa4,0xbc,0x33,0x77,0x02,0x78,0x0e,0x90,0x2a,0x6d,0xe1,
0x45,0x7d,0x87,0xf0,0x14,0xa8,0x50,0x25,0x50,0x63,0x99,0x20,
0x13,0x35,0x65,0xb1,0x3f,0x0b,0x75,0xc7,0xeb,0x6b,0x42,0x8d,
0x90,0xa9,0x34,0x18,0x0c,0x66,0x7a,0xc4,0x8c,0x22,0x6b,0xb5,
0x5a,0x3f,0xd1,0x38,0xf5,0x74,0x3a,0xed,0x79,0xba,0xfa,0x57,
0x7b,0x99,0x48,0x24,0x3e,0x36,0x1a,0x0d,0x9b,0x71,0x1a,0xfe,
0xfb,0x9a,0x2e,0x5e,0x41,0x21,0x6c,0x00,0x3b,0xc0,0x1b,0x77,
0x5a,0xf2,0x3a,0xf9,0x50,0x78,0x7b,0x58,0xa4,0xc0,0x93,0xc6,
0x06,0x70,0xec,0xfe,0x5e,0xe3,0xe8,0x2a,0xe6,0x7d,0x22,0x98,
0x3a,0x11,0xbb,0x85,0x67,0xb8,0x63,0x9d,0x57,0x32,0x22,0xfa,
0xc6,0x33,0x11,0xff,0x16,0x60,0x00,0x45,0x98,0x2f,0xc2,0xfe,
0xd1,0xc2,0xf2,0x00,0x00,0x00,0x00,0x49,0x45,0x4e,0x44,0xae,
0x42,0x60,0x82,0x01,0x00,0x00,0xff,0xff,0x22,0xc0,0xd5,0x03,
0x88,0x02,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}