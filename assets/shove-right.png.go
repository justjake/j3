package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// shove_right_png returns raw, uncompressed file data.
func shove_right_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0x7e,
0x02,0x81,0xfd,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x02,0x20,0x49,0x44,0x41,0x54,0x78,0xda,0xc4,
0x96,0x41,0x6b,0x1a,0x41,0x14,0xc7,0x67,0xd7,0x95,0x54,0xb3,
0x86,0xc0,0x22,0xc9,0x21,0x5f,0xa0,0x14,0x1a,0xa1,0x37,0xc1,
0x83,0x8a,0x87,0x1e,0xc4,0x5b,0x3f,0x82,0x87,0xa0,0xb7,0xe2,
0x57,0xe8,0xb5,0x9f,0xc0,0x5b,0x0f,0x52,0x68,0x0e,0xa5,0xc5,
0x54,0x30,0x24,0x47,0x43,0xa8,0xb4,0x18,0x42,0xbb,0xb7,0x88,
0xb0,0x4a,0x89,0xec,0xc6,0xcd,0x9a,0xba,0x3b,0xfd,0x4f,0x98,
0x96,0x3d,0xb5,0x4e,0x9c,0xb5,0x0f,0xfe,0x8e,0xbb,0xcc,0xec,
0x6f,0xdf,0xcc,0x7b,0x6f,0x9f,0x42,0x29,0x25,0xeb,0x32,0xf5,
0x01,0x6b,0xa8,0xa0,0x46,0xd0,0x73,0x45,0x51,0x88,0x22,0xe2,
0x19,0x16,0xe8,0x98,0xef,0xd4,0xeb,0x75,0x92,0xc9,0x64,0xfe,
0xfe,0x46,0x78,0xae,0xe3,0x38,0x64,0x3e,0x9f,0x93,0x46,0xa3,
0x61,0xc5,0x62,0xb1,0x3d,0x4d,0xd0,0xab,0x5d,0xf6,0xc3,0x40,
0xe5,0x72,0xf9,0x9f,0x93,0x17,0x8b,0x05,0x69,0xb5,0x5a,0x44,
0x55,0xd5,0x1d,0x5c,0x6e,0x89,0x6e,0xa3,0x2e,0x32,0x59,0xd3,
0x34,0x92,0x4a,0xa5,0x7e,0x5f,0x1a,0x6a,0xd4,0x41,0xc1,0xce,
0x8a,0x5b,0x42,0x25,0xeb,0x33,0x75,0x9d,0x30,0xf2,0x5f,0x61,
0x2f,0xa1,0x3e,0x94,0x8e,0x14,0x86,0x83,0x8c,0xfb,0xbe,0x7f,
0x80,0xbf,0xfb,0x41,0x10,0x1c,0x23,0x47,0x8c,0x28,0x3d,0xdb,
0xae,0x56,0xab,0xaf,0x5c,0xd7,0xb5,0x91,0x17,0x4f,0x12,0x89,
0xc4,0xd1,0x74,0x3a,0xdd,0x8e,0x0a,0xb6,0xd1,0x6c,0x36,0x29,
0x92,0xf5,0x23,0x80,0x33,0xe4,0xc8,0x33,0x5d,0xd7,0x3f,0x58,
0x96,0xb5,0x19,0x05,0xcc,0x86,0xcc,0x6e,0xb7,0xfb,0xbd,0x52,
0xa9,0x74,0x3c,0xcf,0x73,0x01,0xcc,0x1a,0x86,0x71,0xa8,0x84,
0x92,0x65,0x15,0x0b,0x97,0x2b,0x07,0xfa,0x0a,0xc5,0xd2,0xe9,
0xf4,0x1e,0xc6,0x38,0xbb,0x89,0xad,0x7c,0xc4,0x12,0x12,0x72,
0xa5,0xc1,0x50,0x38,0x29,0x1c,0xb8,0x6e,0xb7,0xdb,0x41,0xa1,
0x50,0x78,0x11,0x87,0x0d,0x06,0x83,0x71,0xa9,0x54,0x7a,0xc3,
0xce,0x53,0x2a,0xec,0xde,0x35,0xc7,0x79,0x9c,0x4c,0x26,0xdf,
0x22,0x40,0x36,0x4d,0xd3,0x9c,0x14,0x8b,0xc5,0x2e,0xce,0xec,
0x8e,0x7f,0x2a,0xe4,0x6d,0x23,0xbc,0x52,0x51,0xa5,0xdf,0x03,
0x64,0x8c,0x46,0xa3,0x49,0x3e,0x9f,0xff,0x04,0xd0,0x67,0x9e,
0x77,0x53,0xd9,0x01,0xa2,0xf7,0x7a,0xbd,0x0e,0x40,0x56,0x2e,
0x97,0xeb,0x0c,0x87,0xc3,0x2f,0xb8,0x77,0x0a,0x7d,0x83,0x3c,
0xd9,0x01,0xb2,0x95,0xcd,0x66,0xcf,0x30,0xfa,0xd0,0x15,0x74,
0x02,0x5d,0xb2,0xb3,0xa2,0x92,0x7a,0x87,0x30,0xec,0x8e,0x7f,
0xc2,0x17,0x1c,0x72,0x01,0xdd,0x50,0x89,0x4d,0x4a,0x18,0x76,
0x0d,0x9d,0xf1,0x90,0x67,0x39,0x37,0xa3,0x92,0xbb,0xa1,0x70,
0xe8,0xff,0xc4,0x30,0x91,0x5d,0x0f,0xc3,0xef,0xab,0x91,0x88,
0x8c,0x41,0x50,0xd8,0xef,0x9b,0x9e,0x95,0x60,0xfd,0x7e,0x7f,
0x29,0x18,0x03,0xa1,0xec,0x11,0xdb,0xb6,0x67,0x7f,0x6e,0x2e,
0x2b,0xd6,0x58,0x51,0x41,0x1b,0x8f,0xc7,0x5e,0xad,0x56,0x7b,
0x87,0xb5,0x4f,0x85,0x3d,0x43,0xf2,0xbf,0x66,0x50,0x81,0x86,
0xf6,0x86,0x07,0xde,0xad,0x28,0x8c,0x2d,0x34,0x05,0xe6,0x07,
0x3c,0xe8,0xce,0xa1,0x1f,0xc2,0x1d,0x31,0x6f,0x54,0x75,0x01,
0xd8,0x2d,0x03,0xb1,0x74,0xfa,0x25,0xc0,0x00,0x5f,0xa7,0x39,
0xf6,0x13,0xaa,0xec,0xfc,0x00,0x00,0x00,0x00,0x49,0x45,0x4e,
0x44,0xae,0x42,0x60,0x82,0x01,0x00,0x00,0xff,0xff,0x48,0xdd,
0x52,0xe2,0x7e,0x02,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}