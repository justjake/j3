package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// split_top_png returns raw, uncompressed file data.
func split_top_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0xaa,
0x01,0x55,0xfe,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x01,0x4c,0x49,0x44,0x41,0x54,0x78,0xda,0xec,
0x96,0xb1,0x6a,0x84,0x40,0x10,0x86,0x67,0x57,0x41,0x8e,0xc4,
0x6b,0x2e,0x90,0x26,0x6d,0xda,0x70,0x69,0x84,0x3c,0x42,0xfa,
0x80,0x0f,0x60,0x6b,0xed,0x43,0xf8,0x0e,0x3e,0x80,0x10,0xee,
0x25,0x2c,0x02,0x92,0x10,0xf0,0x19,0xc2,0x81,0x06,0x0b,0x35,
0x47,0x14,0x34,0x9b,0x19,0xb3,0x17,0x3c,0x48,0x97,0xdd,0x83,
0x10,0x07,0x7e,0x17,0x76,0xe1,0xff,0x98,0x71,0x76,0x19,0x26,
0x84,0x80,0x63,0x05,0x97,0xeb,0x2d,0x6a,0x8b,0x12,0x1a,0xb4,
0x95,0xfe,0xc0,0x50,0xe6,0x30,0x0c,0x2f,0x61,0x18,0x9e,0x5b,
0x96,0x05,0xb6,0x6d,0x03,0x63,0xec,0xd7,0x59,0x50,0xc5,0x9a,
0xa6,0x81,0xae,0xeb,0x20,0x08,0x82,0xdc,0x30,0x8c,0x0b,0x13,
0xf7,0x97,0x9c,0xf3,0x11,0xe4,0xba,0x2e,0x98,0xa6,0xa9,0xac,
0x6c,0x7d,0xdf,0x43,0x1c,0xc7,0x40,0xfe,0x23,0x07,0x3f,0x2b,
0x3a,0xa0,0x8c,0x54,0x82,0x28,0xc8,0x8f,0x7c,0x65,0xac,0x08,
0xb6,0x18,0xeb,0xa9,0xa0,0x74,0x3f,0xc5,0xc4,0x77,0xc1,0x27,
0x4d,0xa2,0xbd,0x19,0x39,0x1c,0x31,0x66,0xd8,0xdf,0x83,0x1d,
0x5c,0xac,0x3c,0xcf,0xb5,0x03,0xd7,0xe2,0xeb,0x35,0x16,0x59,
0x96,0x69,0x59,0xa5,0xff,0x9a,0x49,0xd8,0x73,0x14,0x45,0xe0,
0x38,0x8e,0xf2,0x4c,0xd2,0x34,0x05,0xcf,0xf3,0xe8,0x72,0x5f,
0xcf,0xdd,0x38,0xc3,0xfe,0x3b,0x4c,0xd7,0x94,0x35,0xf5,0xfd,
0x86,0xed,0x87,0x13,0x95,0x10,0xf2,0x23,0xdf,0x83,0xb7,0xb1,
0xaa,0xaa,0x5d,0xdb,0xb6,0x27,0x49,0x92,0x28,0x9f,0xae,0xd0,
0x17,0xea,0xba,0xde,0xed,0xf7,0xaf,0x7c,0xdf,0xdf,0x94,0x65,
0xd9,0x09,0x0d,0x51,0x14,0x45,0x4b,0xfe,0xc4,0xa1,0x14,0x2e,
0x51,0x77,0xa8,0x1b,0xd4,0xa9,0x9c,0x25,0x95,0x55,0x13,0xf5,
0x86,0x7a,0x40,0xdd,0x53,0x19,0x4b,0xd4,0xa3,0x3c,0x3c,0x53,
0xdc,0xa1,0x1f,0xa8,0x57,0xd4,0x13,0x71,0x98,0xfc,0x6f,0x4b,
0x39,0x3f,0x2e,0x34,0xc0,0xde,0x65,0x42,0xf5,0xa7,0x00,0x03,
0x00,0xce,0xe2,0x11,0x17,0x76,0x67,0x8a,0xae,0x00,0x00,0x00,
0x00,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,0x01,0x00,0x00,
0xff,0xff,0x4a,0x30,0xab,0x42,0xaa,0x01,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}