package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// shove_bottom_png returns raw, uncompressed file data.
func shove_bottom_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0x41,
0x02,0xbe,0xfd,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x01,0xe3,0x49,0x44,0x41,0x54,0x78,0xda,0xec,
0x96,0x4b,0x4b,0x02,0x51,0x18,0x86,0xcf,0x99,0x0c,0xca,0x4b,
0x2d,0x92,0x30,0x08,0x5a,0xb5,0x15,0xd1,0x88,0xfa,0x0d,0x31,
0xbb,0x6a,0xd9,0x32,0x08,0x54,0xa2,0x9d,0xe0,0xb2,0x1f,0x10,
0xb8,0xc9,0x45,0x88,0x4b,0x21,0xfa,0x09,0x22,0x6e,0xba,0x50,
0xe4,0x46,0x70,0xe5,0xd0,0xc2,0x8d,0xe5,0xc2,0x31,0x71,0xbc,
0x4e,0xef,0x47,0x67,0xc2,0x16,0xea,0x84,0xe3,0xd0,0xc2,0x03,
0x0f,0x67,0xe6,0x7c,0xdf,0xbc,0xaf,0xe7,0x2e,0xd7,0x75,0x9d,
0xd9,0x55,0x24,0x66,0x63,0x31,0x63,0x76,0x0e,0x3e,0x80,0x3c,
0x22,0x7e,0x20,0xe2,0xd1,0x89,0x4a,0x34,0x8c,0xa3,0x40,0x59,
0xec,0x74,0x3a,0xaf,0xfa,0x77,0xe9,0xe1,0x39,0x3a,0x1c,0xc7,
0xfb,0x29,0xea,0x2e,0x05,0x29,0x8f,0xf2,0xc7,0xea,0x4d,0x30,
0xf3,0x06,0x83,0xc1,0xe3,0x72,0xb9,0x5c,0x12,0x86,0x7a,0xb7,
0xdb,0xbd,0x42,0xb5,0x80,0xfa,0xd2,0x68,0x53,0x14,0xa5,0x14,
0x0a,0x85,0x8e,0x90,0xbf,0x36,0x8d,0xd9,0x06,0x38,0x71,0x3a,
0x9d,0xc9,0x6c,0x36,0x5b,0x34,0xc4,0xfb,0xfd,0xbe,0x62,0x3c,
0xe7,0x72,0xb9,0x22,0xc5,0x29,0x8f,0xf2,0xa7,0x31,0x73,0x81,
0x1d,0x70,0x21,0x49,0xd2,0x4d,0x2a,0x95,0x7a,0x42,0xfb,0x40,
0xf8,0x0c,0xd2,0xe9,0xf4,0x23,0xb5,0x53,0x5c,0xe4,0xb9,0xa6,
0x31,0xe3,0xc2,0xd0,0x0f,0xce,0x40,0x32,0x16,0x8b,0xe5,0x1b,
0x8d,0x46,0x2b,0x1e,0x8f,0xe7,0xf1,0x7e,0x2d,0xda,0xfd,0x22,
0x8f,0x8f,0xd3,0xe3,0x66,0xf6,0x19,0xe7,0x7c,0x09,0xd5,0x16,
0xd8,0x03,0xbb,0x60,0x1d,0x54,0xc1,0x13,0x78,0x00,0x6f,0xd0,
0xd1,0x26,0xe9,0x38,0xcc,0xec,0x0f,0x12,0x82,0xa1,0x82,0xc7,
0x36,0x50,0xc1,0x26,0xa8,0x00,0x5a,0x81,0x15,0x5a,0x8c,0x66,
0x74,0xf8,0x5f,0x4e,0x10,0x18,0xd2,0x8f,0x5b,0x05,0x6e,0xf0,
0x09,0xea,0xb4,0x25,0x4c,0x7f,0x6f,0xe7,0x71,0x65,0x0c,0xa3,
0x1d,0x8e,0xdc,0x81,0xa1,0x71,0x53,0xef,0x22,0x91,0x08,0x0b,
0x04,0x02,0x96,0x3b,0x14,0x0a,0x05,0x96,0x48,0x24,0x68,0x0a,
0xdc,0xd4,0x33,0x1f,0x35,0x92,0x91,0x2c,0xcb,0xb3,0xec,0x99,
0x4f,0x12,0x93,0x6d,0x47,0x71,0xff,0xbb,0x2b,0x66,0x6e,0x36,
0x37,0x63,0x6c,0x56,0xc7,0xd6,0xb0,0xee,0x8f,0x19,0xee,0x28,
0xd6,0xeb,0xf5,0x2c,0x35,0x21,0x3d,0xd2,0xfd,0x75,0x36,0xd6,
0xeb,0xf5,0xa6,0xa6,0x69,0xae,0x4c,0x26,0xc3,0x3c,0x1e,0x0f,
0x1d,0x2d,0x96,0x98,0x91,0x11,0x74,0x99,0xaa,0xaa,0x4d,0xa3,
0xdd,0x1f,0x0e,0x87,0xef,0x6a,0xb5,0x5a,0x5b,0x9f,0x41,0xa9,
0x56,0xab,0x1a,0xe9,0x93,0x0f,0x75,0x61,0x1b,0x1c,0x82,0x7d,
0x71,0x74,0x71,0x2b,0xa7,0x4c,0xdc,0x7b,0xf7,0xe0,0x96,0x86,
0xb1,0x06,0x9e,0x45,0xd0,0x6b,0xf1,0x0a,0x1d,0x80,0x77,0xf0,
0x42,0x3e,0x5c,0xcc,0xdb,0x0a,0xfd,0xe7,0x03,0xcb,0x33,0x30,
0x6b,0x89,0x0e,0xa9,0x5f,0x02,0x0c,0x00,0xba,0x25,0x23,0xc1,
0x04,0x7d,0x3b,0xff,0x00,0x00,0x00,0x00,0x49,0x45,0x4e,0x44,
0xae,0x42,0x60,0x82,0x01,0x00,0x00,0xff,0xff,0xa1,0xa0,0xa5,
0xcf,0x41,0x02,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}