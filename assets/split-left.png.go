package assets

import (
	"bytes"
	"compress/gzip"
	"io"
)

// split_left_png returns raw, uncompressed file data.
func split_left_png() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x09,0x6e,0x88,0x00,0xff,0x00,0xaa,
0x01,0x55,0xfe,0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,
0x00,0x00,0x0d,0x49,0x48,0x44,0x52,0x00,0x00,0x00,0x1b,0x00,
0x00,0x00,0x1d,0x08,0x06,0x00,0x00,0x00,0x5b,0x8d,0x17,0x48,
0x00,0x00,0x00,0x19,0x74,0x45,0x58,0x74,0x53,0x6f,0x66,0x74,
0x77,0x61,0x72,0x65,0x00,0x41,0x64,0x6f,0x62,0x65,0x20,0x49,
0x6d,0x61,0x67,0x65,0x52,0x65,0x61,0x64,0x79,0x71,0xc9,0x65,
0x3c,0x00,0x00,0x01,0x4c,0x49,0x44,0x41,0x54,0x78,0xda,0xec,
0x56,0x31,0x6a,0x84,0x40,0x14,0xfd,0x33,0x0a,0x22,0x89,0xdb,
0x6c,0x20,0x4d,0xda,0xb4,0xf6,0x7b,0x84,0xf4,0x01,0x2f,0x60,
0x69,0xed,0x21,0x3c,0x83,0x17,0x10,0x42,0x2e,0x61,0x91,0x66,
0xd3,0x78,0x86,0xb0,0xa0,0xc1,0x42,0xcd,0x12,0x05,0x8d,0xf9,
0x5f,0xc6,0x45,0x96,0xc4,0xd5,0x45,0x97,0x2d,0x7c,0xf0,0x14,
0x9c,0x99,0xf7,0x7c,0x7f,0x7e,0xf1,0x59,0x5d,0xd7,0x70,0x29,
0x70,0xf1,0x7e,0x42,0xee,0x90,0xf5,0x0c,0xdc,0x09,0x7d,0x60,
0x48,0xb9,0xaa,0xaa,0x0f,0xc7,0x71,0xee,0x15,0x45,0x01,0x4d,
0xd3,0x80,0x31,0xd6,0xfb,0x87,0xa6,0x69,0x82,0xeb,0xba,0xbd,
0x7b,0xa8,0x62,0x59,0x96,0x41,0x51,0x14,0x60,0xdb,0x76,0x28,
0x49,0xd2,0x83,0x8c,0xdf,0x57,0x9c,0xf3,0xc6,0xc8,0x30,0x0c,
0x90,0x65,0xb9,0x57,0x24,0x0c,0x43,0x08,0x82,0x60,0x50,0xd9,
0xc8,0xc8,0xf7,0x7d,0x20,0xfd,0xc6,0x07,0x1f,0x6b,0x5a,0xa0,
0x44,0xa7,0x8c,0x5a,0xe8,0xba,0x3e,0x68,0x5f,0x5b,0x29,0x81,
0x35,0x99,0xa9,0x4d,0x3d,0x4f,0x94,0xae,0x8b,0xa1,0xc9,0x8e,
0x74,0x55,0xde,0x69,0x92,0xc1,0x18,0x9a,0xec,0xb8,0x19,0xf9,
0x39,0xa7,0xc6,0x24,0xfb,0xab,0xf5,0x2f,0x91,0x0c,0x96,0x64,
0x4b,0xb2,0x25,0xd9,0x92,0x6c,0x49,0x76,0x2d,0xc9,0xc6,0x4c,
0x59,0x63,0x92,0x75,0x75,0x0f,0x66,0x34,0x9c,0x94,0x65,0x39,
0x59,0x32,0x32,0xa1,0x19,0x84,0x74,0x5b,0x34,0x43,0x47,0x92,
0x24,0xfb,0x3c,0xcf,0x6f,0x3c,0xcf,0x9b,0x7c,0xba,0x42,0x5d,
0x48,0xd3,0x74,0x7f,0xa8,0x8a,0x65,0x59,0xaf,0x71,0x1c,0x17,
0xf5,0x0c,0x88,0xa2,0x28,0x27,0x7d,0xf2,0xa1,0x08,0x8f,0xc8,
0x67,0xe4,0x06,0x79,0x2b,0x66,0xc9,0xa9,0x40,0x17,0xf6,0x85,
0x7c,0x43,0xbe,0x50,0x19,0x63,0xe4,0x56,0x2c,0xde,0x9d,0xdb,
0xa1,0xff,0xe0,0x07,0xf9,0x89,0x7c,0x27,0x1f,0x26,0xee,0x6d,
0x25,0xe6,0x47,0x75,0x06,0xb3,0x6f,0x11,0x28,0xfd,0x15,0x60,
0x00,0x2b,0xac,0xf3,0x05,0xe9,0x9e,0x34,0x9e,0x00,0x00,0x00,
0x00,0x49,0x45,0x4e,0x44,0xae,0x42,0x60,0x82,0x01,0x00,0x00,
0xff,0xff,0x78,0x53,0x69,0xc6,0xaa,0x01,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}